<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Common Exception Spring Web"><sessioninfo id="zander.eixe.bremersee.org-c0ca335c" start="1646083398566" dump="1646083403356"/><package name="org/bremersee/exception"><class name="org/bremersee/exception/ImmutableRestApiExceptionMapperProperties" sourcefilename="ImmutableRestApiExceptionMapperProperties.java"/><class name="org/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMapping" sourcefilename="RestApiExceptionMapperProperties.java"><method name="builder" desc="()Lorg/bremersee/exception/ImmutableExceptionMapping$Builder;" line="189"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStatus" desc="()I" line="207"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="2"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig" sourcefilename="RestApiExceptionMapperProperties.java"><method name="builder" desc="()Lorg/bremersee/exception/ImmutableExceptionMappingConfig$Builder;" line="240"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncludeMessage" desc="()Ljava/lang/Boolean;" line="254"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncludeException" desc="()Ljava/lang/Boolean;" line="265"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncludeApplicationName" desc="()Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncludePath" desc="()Ljava/lang/Boolean;" line="287"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncludeHandler" desc="()Ljava/lang/Boolean;" line="298"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncludeStackTrace" desc="()Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncludeCause" desc="()Ljava/lang/Boolean;" line="320"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEvaluateAnnotationFirst" desc="()Ljava/lang/Boolean;" line="331"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/exception/RestApiExceptionParserImpl" sourcefilename="RestApiExceptionParserImpl.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/charset/Charset;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;Ljava/nio/charset/Charset;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;Lcom/fasterxml/jackson/dataformat/xml/XmlMapper;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;Lcom/fasterxml/jackson/dataformat/xml/XmlMapper;Ljava/nio/charset/Charset;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonMapper" desc="()Lcom/fasterxml/jackson/databind/ObjectMapper;" line="116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXmlMapper" desc="()Lcom/fasterxml/jackson/dataformat/xml/XmlMapper;" line="120"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObjectMapper" desc="(Lorg/bremersee/exception/RestApiResponseType;)Ljava/util/Optional;" line="130"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultCharset" desc="()Ljava/nio/charset/Charset;" line="145"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseException" desc="([BLorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;)Lorg/bremersee/exception/model/RestApiException;" line="155"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseException" desc="(Ljava/lang/String;Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;)Lorg/bremersee/exception/model/RestApiException;" line="169"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRestApiExceptionFromHeaders" desc="(Ljava/lang/String;Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;)Lorg/bremersee/exception/model/RestApiException;" line="198"><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyHttpStatus" desc="(Lorg/bremersee/exception/model/RestApiException;Lorg/springframework/http/HttpStatus;)Lorg/bremersee/exception/model/RestApiException;" line="254"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContentTypeCharset" desc="(Lorg/springframework/http/MediaType;)Ljava/nio/charset/Charset;" line="267"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseErrorTimestamp" desc="(Ljava/lang/String;)Ljava/time/OffsetDateTime;" line="289"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getContentTypeCharset$5" desc="(Lorg/springframework/http/MediaType;)Ljava/nio/charset/Charset;" line="269"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parseException$4" desc="(Ljava/lang/String;Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;)Lorg/bremersee/exception/model/RestApiException;" line="182"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parseException$3" desc="(Lorg/springframework/http/HttpStatus;Lorg/bremersee/exception/model/RestApiException;)Lorg/bremersee/exception/model/RestApiException;" line="181"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parseException$2" desc="(Lorg/bremersee/exception/RestApiResponseType;Ljava/lang/String;)Ljava/util/Optional;" line="173"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parseException$1" desc="(Ljava/lang/String;Lorg/bremersee/exception/RestApiResponseType;Lcom/fasterxml/jackson/databind/ObjectMapper;)Ljava/util/Optional;" line="175"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parseException$0" desc="(Ljava/lang/String;)Z" line="172"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="325"/><counter type="BRANCH" missed="4" covered="30"/><counter type="LINE" missed="0" covered="86"/><counter type="COMPLEXITY" missed="4" covered="36"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/exception/ImmutableExceptionMapping$Builder" sourcefilename="ImmutableExceptionMapping.java"/><class name="org/bremersee/exception/ImmutableExceptionMapping" sourcefilename="ImmutableExceptionMapping.java"/><class name="org/bremersee/exception/RestApiResponseType" sourcefilename="RestApiResponseType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILorg/springframework/http/MediaType;Ljava/lang/String;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContentType" desc="()Lorg/springframework/http/MediaType;" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContentTypeValue" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detectByAccepted" desc="(Ljava/util/List;)Lorg/bremersee/exception/RestApiResponseType;" line="91"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detectByContentType" desc="(Lorg/springframework/http/MediaType;)Lorg/bremersee/exception/RestApiResponseType;" line="108"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJson" desc="(Lorg/springframework/http/MediaType;)Z" line="118"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJsonAccepted" desc="(Ljava/util/List;)Z" line="124"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isXml" desc="(Lorg/springframework/http/MediaType;)Z" line="133"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isXmlAccepted" desc="(Ljava/util/List;)Z" line="140"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isXmlAccepted$1" desc="(Lorg/springframework/http/MediaType;)Z" line="143"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isJsonAccepted$0" desc="(Lorg/springframework/http/MediaType;)Z" line="127"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="179"/><counter type="BRANCH" missed="0" covered="34"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="0" covered="29"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/exception/ImmutableRestApiExceptionMapperProperties$Builder" sourcefilename="ImmutableRestApiExceptionMapperProperties.java"/><class name="org/bremersee/exception/RestApiExceptionMapperProperties" sourcefilename="RestApiExceptionMapperProperties.java"><method name="builder" desc="()Lorg/bremersee/exception/ImmutableRestApiExceptionMapperProperties$Builder;" line="41"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultExceptionMapping" desc="()Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMapping;" line="52"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExceptionMappings" desc="()Ljava/util/List;" line="67"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultExceptionMappingConfig" desc="()Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;" line="94"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExceptionMappingConfigs" desc="()Ljava/util/List;" line="107"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findExceptionMapping" desc="(Ljava/lang/Throwable;)Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMapping;" line="118"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findExceptionMappingConfig" desc="(Ljava/lang/Throwable;)Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;" line="134"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Throwable;Ljava/lang/String;)Z" line="143"><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Class;Ljava/lang/String;)Z" line="162"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findExceptionMappingConfig$1" desc="(Ljava/lang/Throwable;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;)Z" line="136"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findExceptionMapping$0" desc="(Ljava/lang/Throwable;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMapping;)Z" line="120"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="174"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="2" covered="56"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/exception/ImmutableExceptionMappingConfig" sourcefilename="ImmutableExceptionMappingConfig.java"/><class name="org/bremersee/exception/RestApiExceptionMapperForWeb" sourcefilename="RestApiExceptionMapperForWeb.java"><method name="&lt;init&gt;" desc="(Lorg/bremersee/exception/RestApiExceptionMapperProperties;Ljava/lang/String;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detectHttpStatus" desc="(Ljava/lang/Throwable;Ljava/lang/Object;)Lorg/springframework/http/HttpStatus;" line="78"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromStatus" desc="(Ljava/lang/Integer;)Ljava/util/Optional;" line="108"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)Lorg/bremersee/exception/model/RestApiException;" line="118"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findHandlerClass" desc="(Ljava/lang/Object;)Ljava/util/Optional;" line="154"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findHandlerMethod" desc="(Ljava/lang/Object;)Ljava/util/Optional;" line="170"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setErrorCode" desc="(Lorg/bremersee/exception/model/RestApiException;Ljava/lang/Throwable;Ljava/lang/Object;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;)Lorg/bremersee/exception/model/RestApiException;" line="190"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMessage" desc="(Lorg/bremersee/exception/model/RestApiException;Ljava/lang/Throwable;Ljava/lang/Object;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;)Lorg/bremersee/exception/model/RestApiException;" line="226"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClassName" desc="(Lorg/bremersee/exception/model/RestApiException;Ljava/lang/Throwable;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;)Lorg/bremersee/exception/model/RestApiException;" line="258"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setApplication" desc="(Lorg/bremersee/exception/model/RestApiException;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;)Lorg/bremersee/exception/model/RestApiException;" line="277"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPath" desc="(Lorg/bremersee/exception/model/RestApiException;Ljava/lang/String;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;)Lorg/bremersee/exception/model/RestApiException;" line="296"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHandler" desc="(Lorg/bremersee/exception/model/RestApiException;Ljava/lang/Object;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;)Lorg/bremersee/exception/model/RestApiException;" line="315"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStackTrace" desc="(Lorg/bremersee/exception/model/RestApiException;[Ljava/lang/StackTraceElement;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;)Lorg/bremersee/exception/model/RestApiException;" line="344"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCause" desc="(Lorg/bremersee/exception/model/RestApiException;Ljava/lang/Throwable;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;)Lorg/bremersee/exception/model/RestApiException;" line="373"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reconfigureRestApiException" desc="(Lorg/bremersee/exception/model/RestApiException;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;)Lorg/bremersee/exception/model/RestApiException;" line="415"><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setCause$38" desc="(Lorg/bremersee/exception/model/RestApiException;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;Lorg/bremersee/exception/model/RestApiException;)Lorg/bremersee/exception/model/RestApiException;" line="389"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setCause$37" desc="(Ljava/lang/Throwable;Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;)Ljava/util/Optional;" line="377"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setCause$36" desc="(Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;Ljava/lang/Throwable;)Lorg/bremersee/exception/model/RestApiException;" line="380"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setCause$35" desc="(Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;Lorg/bremersee/exception/model/RestApiException;)Lorg/bremersee/exception/model/RestApiException;" line="376"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setCause$34" desc="(Ljava/lang/Throwable;)Lorg/bremersee/exception/model/RestApiException;" line="375"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setCause$33" desc="(Ljava/lang/Throwable;)Z" line="374"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setStackTrace$32" desc="(Ljava/lang/StackTraceElement;)Lorg/bremersee/exception/model/StackTraceItem;" line="349"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setHandler$31" desc="(Lorg/bremersee/exception/model/RestApiException;Lorg/bremersee/exception/model/Handler;)Lorg/bremersee/exception/model/RestApiException;" line="327"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setHandler$30" desc="(Ljava/lang/Object;Lorg/bremersee/exception/model/Handler;)Ljava/util/Optional;" line="325"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setHandler$29" desc="(Lorg/bremersee/exception/model/Handler;Ljava/lang/Class;)Lorg/bremersee/exception/model/Handler;" line="326"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setHandler$28" desc="(Ljava/lang/reflect/Method;)Lorg/bremersee/exception/model/Handler;" line="319"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setMessage$27" desc="(Lorg/bremersee/exception/model/RestApiException;Ljava/lang/String;)Lorg/bremersee/exception/model/RestApiException;" line="241"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setMessage$26" desc="(Ljava/lang/Throwable;)Ljava/util/Optional;" line="240"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setMessage$25" desc="(Ljava/lang/Throwable;)Ljava/util/Optional;" line="237"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setMessage$24" desc="(Ljava/lang/Object;)Ljava/util/Optional;" line="234"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setMessage$23" desc="(Ljava/lang/Class;)Lorg/springframework/web/bind/annotation/ResponseStatus;" line="235"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setMessage$22" desc="(Ljava/lang/Object;)Ljava/util/Optional;" line="231"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setMessage$21" desc="(Ljava/lang/reflect/Method;)Lorg/springframework/web/bind/annotation/ResponseStatus;" line="232"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setMessage$20" desc="(Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;Ljava/lang/String;)Z" line="230"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setErrorCode$19" desc="(Lorg/bremersee/exception/model/RestApiException;Ljava/lang/String;)Lorg/bremersee/exception/model/RestApiException;" line="204"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setErrorCode$18" desc="(Ljava/lang/String;)Z" line="203"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setErrorCode$17" desc="(Ljava/lang/Throwable;)Ljava/util/Optional;" line="202"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setErrorCode$16" desc="(Ljava/lang/Throwable;)Ljava/util/Optional;" line="199"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setErrorCode$15" desc="(Ljava/lang/Object;)Ljava/util/Optional;" line="196"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setErrorCode$14" desc="(Ljava/lang/Class;)Lorg/bremersee/exception/annotation/ErrorCode;" line="197"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setErrorCode$13" desc="(Ljava/lang/Object;)Ljava/util/Optional;" line="193"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setErrorCode$12" desc="(Ljava/lang/reflect/Method;)Lorg/bremersee/exception/annotation/ErrorCode;" line="194"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setErrorCode$11" desc="(Ljava/lang/Throwable;)Ljava/lang/String;" line="192"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setErrorCode$10" desc="(Lorg/bremersee/exception/RestApiExceptionMapperProperties$ExceptionMappingConfig;Ljava/lang/Throwable;)Z" line="191"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findHandlerMethod$9" desc="(Ljava/lang/Object;)Ljava/lang/reflect/Method;" line="172"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findHandlerMethod$8" desc="(Ljava/lang/Object;)Z" line="171"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findHandlerClass$7" desc="(Ljava/lang/Object;)Ljava/lang/Class;" line="156"><counter type="INSTRUCTION" missed="3" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$detectHttpStatus$6" desc="(Ljava/lang/Throwable;)Ljava/util/Optional;" line="97"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$detectHttpStatus$5" desc="(Ljava/lang/Throwable;)Ljava/util/Optional;" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$detectHttpStatus$4" desc="(Ljava/lang/Object;)Ljava/util/Optional;" line="91"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$detectHttpStatus$3" desc="(Ljava/lang/Class;)Lorg/springframework/web/bind/annotation/ResponseStatus;" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$detectHttpStatus$2" desc="(Ljava/lang/Object;)Ljava/util/Optional;" line="88"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$detectHttpStatus$1" desc="(Ljava/lang/reflect/Method;)Lorg/springframework/web/bind/annotation/ResponseStatus;" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$detectHttpStatus$0" desc="(Ljava/lang/Throwable;)Ljava/util/Optional;" line="80"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="772"/><counter type="BRANCH" missed="10" covered="54"/><counter type="LINE" missed="0" covered="167"/><counter type="COMPLEXITY" missed="10" covered="76"/><counter type="METHOD" missed="0" covered="54"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/exception/RestApiResponseErrorHandler" sourcefilename="RestApiResponseErrorHandler.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/bremersee/exception/RestApiExceptionParser;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasError" desc="(Lorg/springframework/http/client/ClientHttpResponse;)Z" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleError" desc="(Lorg/springframework/http/client/ClientHttpResponse;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/exception/RestApiExceptionParser" sourcefilename="RestApiExceptionParser.java"><method name="parseException" desc="(Ljava/io/InputStream;Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;)Lorg/bremersee/exception/model/RestApiException;" line="76"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/exception/RestApiExceptionMapper" sourcefilename="RestApiExceptionMapper.java"/><class name="org/bremersee/exception/ImmutableExceptionMappingConfig$Builder" sourcefilename="ImmutableExceptionMappingConfig.java"/><class name="org/bremersee/exception/RestApiResponseException" sourcefilename="RestApiResponseException.java"><method name="&lt;init&gt;" desc="(Lorg/bremersee/exception/model/RestApiException;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/springframework/http/HttpStatus;Lorg/bremersee/exception/model/RestApiException;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detectHttpStatus" desc="(Lorg/bremersee/exception/model/RestApiException;)Lorg/springframework/http/HttpStatus;" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/exception/ImmutableExceptionMappingConfig$InitShim" sourcefilename="ImmutableExceptionMappingConfig.java"/><class name="org/bremersee/exception/ImmutableRestApiExceptionMapperProperties$InitShim" sourcefilename="ImmutableRestApiExceptionMapperProperties.java"/><sourcefile name="RestApiResponseException.java"><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RestApiExceptionParserImpl.java"><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="2"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="1" cb="3"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="9" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="1" ci="10" mb="1" cb="1"/><line nr="173" mi="0" ci="12" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="11" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="2"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="2"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="1" cb="1"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="2"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="2"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="2"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="2"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="2"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="6" mb="1" cb="3"/><line nr="275" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="2"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="294" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="325"/><counter type="BRANCH" missed="4" covered="30"/><counter type="LINE" missed="0" covered="86"/><counter type="COMPLEXITY" missed="4" covered="36"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RestApiExceptionMapperForWeb.java"><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="11" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="2"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="3" ci="6" mb="1" cb="1"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="13" mb="1" cb="3"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="9" mb="0" cb="0"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="8" mb="0" cb="0"/><line nr="197" mi="0" ci="7" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="9" mb="0" cb="0"/><line nr="203" mi="1" ci="9" mb="1" cb="1"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="2"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="1" ci="14" mb="2" cb="2"/><line nr="231" mi="0" ci="9" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="8" mb="0" cb="0"/><line nr="235" mi="0" ci="7" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="10" mb="0" cb="0"/><line nr="241" mi="0" ci="8" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="2"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="2"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="7" mb="0" cb="0"/><line nr="296" mi="0" ci="7" mb="1" cb="3"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="0" ci="6" mb="0" cb="0"/><line nr="315" mi="0" ci="7" mb="0" cb="4"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="0" ci="7" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="9" mb="0" cb="0"/><line nr="326" mi="0" ci="8" mb="0" cb="0"/><line nr="327" mi="0" ci="8" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="344" mi="0" ci="10" mb="2" cb="4"/><line nr="345" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="1" mb="0" cb="0"/><line nr="373" mi="0" ci="4" mb="0" cb="0"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="375" mi="0" ci="8" mb="0" cb="0"/><line nr="376" mi="0" ci="10" mb="0" cb="0"/><line nr="377" mi="0" ci="8" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="380" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="0" ci="7" mb="0" cb="0"/><line nr="382" mi="0" ci="7" mb="0" cb="0"/><line nr="383" mi="0" ci="6" mb="0" cb="0"/><line nr="384" mi="0" ci="7" mb="0" cb="0"/><line nr="385" mi="0" ci="7" mb="0" cb="0"/><line nr="386" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="3" mb="0" cb="0"/><line nr="391" mi="0" ci="6" mb="1" cb="3"/><line nr="392" mi="0" ci="2" mb="0" cb="0"/><line nr="393" mi="0" ci="2" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="4" mb="0" cb="2"/><line nr="397" mi="0" ci="4" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="4" mb="0" cb="0"/><line nr="416" mi="0" ci="4" mb="0" cb="0"/><line nr="417" mi="0" ci="4" mb="0" cb="0"/><line nr="418" mi="0" ci="4" mb="0" cb="0"/><line nr="419" mi="0" ci="4" mb="0" cb="0"/><line nr="420" mi="0" ci="8" mb="1" cb="3"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="422" mi="0" ci="4" mb="0" cb="0"/><line nr="424" mi="0" ci="4" mb="0" cb="2"/><line nr="425" mi="0" ci="4" mb="0" cb="0"/><line nr="427" mi="0" ci="4" mb="0" cb="2"/><line nr="428" mi="0" ci="4" mb="0" cb="0"/><line nr="430" mi="0" ci="4" mb="0" cb="2"/><line nr="431" mi="0" ci="4" mb="0" cb="0"/><line nr="433" mi="0" ci="4" mb="0" cb="2"/><line nr="434" mi="0" ci="4" mb="0" cb="0"/><line nr="436" mi="0" ci="4" mb="0" cb="2"/><line nr="437" mi="0" ci="4" mb="0" cb="0"/><line nr="439" mi="0" ci="4" mb="0" cb="2"/><line nr="440" mi="0" ci="4" mb="0" cb="0"/><line nr="442" mi="0" ci="8" mb="0" cb="4"/><line nr="443" mi="0" ci="7" mb="0" cb="0"/><line nr="445" mi="0" ci="8" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="772"/><counter type="BRANCH" missed="10" covered="54"/><counter type="LINE" missed="0" covered="167"/><counter type="COMPLEXITY" missed="10" covered="76"/><counter type="METHOD" missed="0" covered="54"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RestApiResponseErrorHandler.java"><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RestApiResponseType.java"><line nr="35" mi="0" ci="15" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="2"/><line nr="119" mi="0" ci="4" mb="0" cb="2"/><line nr="120" mi="0" ci="5" mb="0" cb="2"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="2"/><line nr="128" mi="0" ci="4" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="2"/><line nr="133" mi="0" ci="6" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="2"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="8" mb="0" cb="2"/><line nr="144" mi="0" ci="4" mb="0" cb="2"/><line nr="145" mi="0" ci="5" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="179"/><counter type="BRANCH" missed="0" covered="34"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="0" covered="29"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ImmutableExceptionMappingConfig.java"/><sourcefile name="ImmutableExceptionMapping.java"/><sourcefile name="RestApiExceptionMapperProperties.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="1" cb="3"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="2"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="2"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="2"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="1" cb="1"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="1" cb="3"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="1" cb="1"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="2"/><line nr="169" mi="0" ci="8" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="202"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="3" covered="66"/><counter type="COMPLEXITY" missed="5" covered="28"/><counter type="METHOD" missed="1" covered="21"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ImmutableRestApiExceptionMapperProperties.java"/><sourcefile name="RestApiExceptionParser.java"><line nr="76" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RestApiExceptionMapper.java"/><counter type="INSTRUCTION" missed="13" covered="1559"/><counter type="BRANCH" missed="18" covered="138"/><counter type="LINE" missed="3" covered="389"/><counter type="COMPLEXITY" missed="19" covered="179"/><counter type="METHOD" missed="1" covered="119"/><counter type="CLASS" missed="0" covered="9"/></package><counter type="INSTRUCTION" missed="13" covered="1559"/><counter type="BRANCH" missed="18" covered="138"/><counter type="LINE" missed="3" covered="389"/><counter type="COMPLEXITY" missed="19" covered="179"/><counter type="METHOD" missed="1" covered="119"/><counter type="CLASS" missed="0" covered="9"/></report>